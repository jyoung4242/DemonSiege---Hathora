types:
    #enums

    CardType:
        - Spell
        - Weapon
        - Item
        - Friend
    Cardstatus:
        - FaceUp
        - FaceDown
    PlayerStatus:
        - Undefined
        - Connected
        - RoleSelection
        - ReadyToPlay
    AbilityCardType:
        - MonsterCard
        - TowerDefense
        - AbilityCard
        - LocationCard
    Roles:
        - Barbarian
        - Wizard
        - Paladin
        - Rogue
    RoundState:
        - Idle
        - TowerDefense
        - MonsterCard
        - PlayerTurn
        - End
    GameStates:
        - Idle
        - PlayersJoining
        - Setup
        - ReadyForRound
        - InProgress
        - Completed
    DieFaces:
        - GainHealth
        - LoseHealth
        - GainHealthAll
        - GainAttack
        - LoseAttack
        - GainAbility
        - LoseAbility
        - DrawCard
        - DiscardCard
        - AddLocation
        - RemoveLocation
    Conditions:
        - Standard
        - IfTopCardOfDeckAbilityScoreGT4
        - IfTopCardOfDeckAbilityScoreGT1
        - ForEachCardInHandAbilityScoreGT4
        - ForEachCardInHandAbilityScoreGT1
        - IfTopCardSpell
        - IfMonsterKilled
        - IfLocationAdded
        - Choose2
        - Choose3
        - AllChoose
        - IfPlayerDiscards
        - ForEachFriendInHand
        - ForEachSpell
        - ForEachWeapon
        - IfNewMonsterCardorNewMonsterRallyPlayed
        - BlockCardDraw
        - BlockHealing
        - AllDrawOne
        - CannotAddLocation
        - IfPurchasedCardGT4
        - DrawFromDiscard
        - AllDrawFromDiscard
        - ImmuneUntilLast

    #AllHereos: string
    #ActiveHero: string
    #OtherHereos: string
    #ChooseOther: string
    #Passive: string
    #Active: string

    errorMessage:
        status: int
        message: string

    targetType:
        - AllHeroes
        - ActiveHero
        - OtherHeroes
        - ChooseOther

    effectType:
        - Passive
        - Active

    effectProperty:
        prop: string
        val: int

    Effect:
        name: string
        value: effectProperty
        target: targetType
        type: effectType
        cb: string

    MonsterCard:
        Title: string
        Health: int
        Damage: int
        Level: int
        CardStatus: Cardstatus
        Effects: Effect[]
        Rewards: Effect[]

    AbilityCard:
        Title: string
        Catagory: string
        Level: int
        Cost: int
        Effects: Effect[]
        CardStatus: Cardstatus

    TowerDefense:
        Title: string
        Level: int
        Effects: Effect[]
        CardStatus: Cardstatus

    LocationCard:
        Title: string
        Level: int
        TD: int
        Sequence: int
        Health: int
        Effects?: Effect[]
        CardStatus: Cardstatus

    UIEvents:
        type: string
        value: int

    Events:
        user: UserId
        effect: UIEvents

    Player:
        Id: UserId
        PlayerState: PlayerStatus
        NumCards: int
        Health: int
        AttackPoints: int
        AbilityPoints: int
        Hand: AbilityCard[]
        Deck: AbilityCard[]
        Discard: AbilityCard[]
        Role: Roles
        LevelBonus: Effect[]
        TurnComplete: boolean

    GameState:
        gameLevel: int
        locationSequence: int
        gameLog: string[]
        eventLog: Events[]
        roundSequence: RoundState
        gameSequence: GameStates
        abilityDeck: AbilityCard[]
        abilityPile: AbilityCard[]
        monsterDeck: MonsterCard[]
        monsterPile: MonsterCard?
        activeMonsters: MonsterCard[]
        locationDeck: LocationCard[]
        locationPile: LocationCard?
        towerDefenseDeck: TowerDefense[]
        towerDefensePile: TowerDefense[]
        turn: UserId?
        players: Player[]

methods:
    joinGame:
    selectRole:
        role: Roles
    addAI:
    startGame:
    playCard:
        card: AbilityCard
    discard:
        card: AbilityCard
    drawCard:
    endTurn:
    startTurn:
    applyAttack:
        card: MonsterCard
    buyAbilityCard:
        card: AbilityCard
    applyHealth:
        user: UserId
    applyChoice:
        selection: int
    applySelectedUser:
        user: UserId

auth:
    anonymous: {}

userState: GameState
error: string
