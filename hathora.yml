types:
    #enums
    Cards:
        - AbilityCard
        - TowerDefense
        - MonsterCard
        - LocationCard
    CardType:
        - Spell
        - Weapon
        - Item
        - Friend
    Cardstatus:
        - FaceUp
        - FaceDown
        - FaceUpDisabled
    PlayerStatus:
        - Undefined
        - Connected
        - RoleSelection
        - ReadyToPlay
    AbilityCardType:
        - MonsterCard
        - TowerDefense
        - AbilityCard
        - LocationCard
    Roles:
        - Barbarian
        - Wizard
        - Paladin
        - Rogue
    RoundState:
        - Idle
        - TowerDefense
        - MonsterCard
        - PlayerTurn
        - End
    GameStates:
        - Idle
        - PlayersJoining
        - Setup
        - ReadyForRound
        - InProgress
        - Completed
    DieFaces:
        - GainHealth
        - LoseHealth
        - GainHealthAll
        - GainAttack
        - LoseAttack
        - GainAbility
        - LoseAbility
        - DrawCard
        - DiscardCard
        - AddLocation
        - RemoveLocation
    StatusEffect:
        - Stunned
        - NoHeal
        - NoDraw
        - DamageCap
        - MonsterDefeatPerk
        - LocationCursed
        - NoLocation
        - PurchaseCurse
        - DiscardCurse
        - ImmuneUntilLast
        - MonsterRally
    Conditions:
        - Standard
        - IfTopCardOfDeckAbilityScoreGT4
        - IfTopCardOfDeckAbilityScoreGT1
        - ForEachCardInHandAbilityScoreGT4
        - ForEachCardInHandAbilityScoreGT1
        - IfTopCardSpell
        - IfMonsterKilled
        - IfLocationAdded
        - Choose2
        - Choose3
        - AllChoose
        - IfPlayerDiscards
        - ForEachFriendInHand
        - ForEachSpell
        - ForEachWeapon
        - IfNewMonsterCardorNewMonsterRallyPlayed
        - BlockCardDraw
        - BlockHealing
        - AllDrawOne
        - CannotAddLocation
        - IfPurchasedCardGT4
        - DrawFromDiscard
        - AllDrawFromDiscard
        - ImmuneUntilLast

    ErrorMessage:
        status: int
        message: string

    UserResponse:
        userData: boolean
        cardPlayed: Cards
        selectedUsers?: UserId[]
        selectedMonsters?: MonsterCard[]

    targetType:
        - AllHeroes
        - ActiveHero
        - OtherHeroes
        - AnyHero
        - RandomHero

    effectType:
        - Passive
        - Active

    Effect:
        target: targetType
        cb: string
        userPrompt: boolean

    MonsterCard:
        Title: string
        Health: int
        Damage: int
        Level: int
        CardStatus: Cardstatus
        ActiveEffect: Effect?
        PassiveEffect: Effect?
        Rewards: Effect
        StatusEffects: StatusEffect[]

    AbilityCard:
        Title: string
        Catagory: string
        Level: int
        Cost: int
        ActiveEffect: Effect?
        PassiveEffect: Effect?
        CardStatus: Cardstatus

    TowerDefense:
        Title: string
        Level: int
        ActiveEffect: Effect?
        PassiveEffect: Effect?
        CardStatus: Cardstatus

    LocationCard:
        Title: string
        Level: int
        TD: int
        Sequence: int
        Health: int
        ActiveDamage: int
        ActiveEffect: Effect?
        PassiveEffect: Effect?
        CardStatus: Cardstatus

    PlayerDecks:
        Deck: AbilityCard[]
        Discard: AbilityCard[]

    UIEvents:
        type: string
        value: int

    Events:
        user: UserId
        effect: UIEvents

    Player:
        Id: UserId
        username?: string
        characterName?: string
        StatusEffects: StatusEffect[]
        PlayerState: PlayerStatus
        Health: int
        AttackPoints: int
        AbilityPoints: int
        Hand: AbilityCard[]
        Role: Roles
        LevelBonus: Effect[]

    GameState:
        gameLevel: int
        gameLog: string[]
        roundSequence: RoundState
        gameSequence: GameStates
        abilityPile: AbilityCard[]
        activeMonsters: MonsterCard[]
        locationPile: LocationCard?
        towerDefensePile: TowerDefense[]
        turn: UserId?
        players: Player[]

methods:
    joinGame:
    selectRole:
        role: Roles
    nameCharacter:
        name: string
    addAI:
    startGame:
    selectTowerDefense:
        cardname: string
    selectMonsterCard:
        cardname: string
    selectPlayerCard:
        cardname: string
    discard:
        cardname: string
    drawCard:
        cardname: string
    endTurn:
    startTurn:
    userChoice:
        effect: string
    applyAttack:
        cardname: string
    buyAbilityCard:
        cardname: string

auth:
    anonymous: {}

userState: GameState
error: string
